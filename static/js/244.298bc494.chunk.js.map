{"version":3,"file":"static/js/244.298bc494.chunk.js","mappings":"uPAEaA,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sJAQhBC,EAAIH,EAAAA,EAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8K,6BCwCzB,EA7CgB,WAEd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAyBL,EAAAA,EAAAA,WAAS,GAAzBM,GAA+BJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnB,GACrBE,GAAqBP,EAAAA,EAAAA,UAAS,MAArBQ,GAA0BN,EAAAA,EAAAA,GAAAK,EAAA,GAAlB,GAoBjB,OAlBAE,EAAAA,EAAAA,YAAU,WACR,GAAKZ,EAAL,CACA,IAAMa,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEF,OAFEF,EAAAC,KAAA,EAErBb,GAAa,GAAMY,EAAAE,KAAA,GACGC,EAAAA,EAAAA,IAAkBxB,GAAS,KAAD,EAA1CM,EAAOe,EAAAI,KACblB,EAAWD,EAAQoB,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAG5BV,EAASU,EAAAM,GAAMC,SAAS,QAEJ,OAFIP,EAAAC,KAAA,GAExBb,GAAa,GAAOY,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAEvB,kBAXqB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAYtBnB,GAboB,CAetB,GAAG,CAACb,KAGFiC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACsB,IAAnB5B,EAAQ6B,SACPC,EAAAA,EAAAA,KAACtC,EAAC,CAAAoC,SAAC,8CAILE,EAAAA,EAAAA,KAAC1C,EAAI,CAAAwC,SACF5B,EAAQ+B,KAAI,SAAAC,GAAM,OACjBL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAKI,EAAOC,UACZH,EAAAA,EAAAA,KAAA,KAAAF,SAAII,EAAOE,YAFJF,EAAOG,GAGX,QAKf,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  border-bottom: 1px solid black;\n`;\nexport const P = styled.p`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 18px;\n  border: 2px solid purple ;\n  border-radius: 10px;\n  background-color: plum;\n  padding: 10px;\n\n`;\n","import React, { useEffect, useState } from 'react';\nimport { List, P } from './Reviews.styled';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../services/API';\n\nconst Reviews = () => {\n\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchReviewsData = async () => {\n      try {\n        setIsLoading(true);\n        const reviews = await fetchMovieReviews(movieId);\n        setReviews(reviews.results);\n\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviewsData();\n\n  }, [movieId, ]);\n\n  return (\n    <div>\n      {reviews.length === 0 && (\n        <P>\n          We don't have any reviews for this movie\n        </P>\n      )}\n      <List>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","P","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","setIsLoading","_useState5","setError","useEffect","fetchReviewsData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_reviews","wrap","_context","prev","next","fetchMovieReviews","sent","results","t0","message","finish","stop","apply","arguments","_jsxs","children","length","_jsx","map","review","author","content","id"],"sourceRoot":""}