{"version":3,"file":"static/js/93.10183cb9.chunk.js","mappings":"0QAEaA,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iOAWhBC,EAAYH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kI,SC+ClC,EArDa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAyBL,EAAAA,EAAAA,WAAS,GAAzBM,GAA+BJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnB,GACrBE,GAAqBP,EAAAA,EAAAA,UAAS,MAArBQ,GAA0BN,EAAAA,EAAAA,GAAAK,EAAA,GAAlB,GAoBjB,OAlBAE,EAAAA,EAAAA,YAAU,WACR,GAAKZ,EAAL,CACA,IAAMa,EAAkB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEJ,OAFIF,EAAAC,KAAA,EAEvBb,GAAa,GAAMY,EAAAE,KAAA,GACKC,EAAAA,EAAAA,IAAexB,GAAS,KAAD,EAAzCmB,EAASE,EAAAI,KACflB,EAAQY,EAAUb,MAClBoB,QAAQC,IAAI,KAAMrB,GAAMe,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAExBV,EAASU,EAAAO,GAAMC,SAAS,QAEJ,OAFIR,EAAAC,KAAA,GAExBb,GAAa,GAAOY,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAEvB,kBAXuB,OAAAJ,EAAAkB,MAAA,KAAAC,UAAA,KAYxBpB,GAboB,CAetB,GAAG,CAACP,EAAMN,KAGRkC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACxC,EAAI,CAAA0C,SACF9B,EAAK+B,KAAI,SAAA/B,GAAI,OACZ4B,EAAAA,EAAAA,KAACpC,EAAS,CAAAsC,UACRE,EAAAA,EAAAA,MAAA,KACEC,KAhCQ,mCAgCcjC,EAAKkC,cAC3BC,IAAI,sBACJC,OAAO,SAAQN,SAAA,EAEfF,EAAAA,EAAAA,KAAA,OACES,MAAO,IACPC,IACEtC,EAAKuC,aAxCF,kCAyCgBvC,EAAKuC,aAxCuC,4DA2CjEC,IAAKxC,EAAKkC,iBAEZN,EAAAA,EAAAA,KAAA,KAAAE,SAAI9B,EAAKkC,oBAfGlC,EAAKyC,GAiBT,OAKtB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-bottom: 20px;\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-evenly;\n  gap: 15px;\n  border-bottom: 1px solid black;\n`;\nexport const ActorItem = styled.li`\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: 0 2px 4px 2px purple;\n    transform: scale(1.05);\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { fetchMovieCast } from '../../services/API';\nimport { useParams } from 'react-router-dom';\nimport { List, ActorItem } from './Cast.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst GOOGLE_SEARCH = 'https://www.google.com/search?q='; const defaultImgCast = 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieCastData = async () => {\n      try {\n        setIsLoading(true);\n        const movieCast = await fetchMovieCast(movieId);\n        setCast(movieCast.cast);\n        console.log('mx', cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCastData();\n\n  }, [cast, movieId]);\n\n  return (\n    <>\n      <List>\n        {cast.map(cast => (\n          <ActorItem key={cast.id}>\n            <a\n              href={GOOGLE_SEARCH + cast.original_name}\n              rel='noreferrer noopener'\n              target='_blank'\n            >\n              <img\n                width={250}\n                src={\n                  cast.profile_path\n                    ? BASE_IMG_URL + cast.profile_path\n                    : defaultImgCast\n                }\n                alt={cast.original_name}\n              />\n              <p>{cast.original_name}</p>\n            </a>\n          </ActorItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ActorItem","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","setIsLoading","_useState5","setError","useEffect","fetchMovieCastData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieCast","wrap","_context","prev","next","fetchMovieCast","sent","console","log","t0","message","finish","stop","apply","arguments","_jsx","_Fragment","children","map","_jsxs","href","original_name","rel","target","width","src","profile_path","alt","id"],"sourceRoot":""}